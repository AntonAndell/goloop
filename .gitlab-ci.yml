stages:
  - deps
  - unit
  - build
  - pack
  - integration
  - deploy
  - cleanup

variables:
  ALPINE_VERSION: "3.10"
  GOLANG_VERSION: "1.12.14"
  PYTHON_VERSION: "3.7.5"
  JAVA_VERSION: "11.0.4"
  REPO_GO_DEPS: "goloop/go-deps/${CI_COMMIT_REF_SLUG}"
  REPO_PY_DEPS: "goloop/py-deps/${CI_COMMIT_REF_SLUG}"
  REPO_JAVA_DEPS: "goloop/java-deps/${CI_COMMIT_REF_SLUG}"
  REPO_GOLOOP: "goloop/${CI_COMMIT_REF_SLUG}"
  REPO_GOLOOP_PY: "goloop-py/${CI_COMMIT_REF_SLUG}"
  REPO_GOLOOP_JAVA: "goloop-java/${CI_COMMIT_REF_SLUG}"

before_script:
  - env

deps:go:
  image: docker:git
  stage: deps
  script:
    - sh docker/go-deps/build.sh
  tags:
    - docker-build

deps:py:
  image: docker:git
  stage: deps
  script:
    - sh docker/py-deps/build.sh
  tags:
    - docker-build

deps:java:
  image: docker:git
  stage: deps
  script:
    - sh docker/java-deps/build.sh
  tags:
    - docker-build

unit:go:
  image: "${REPO_GO_DEPS}"
  stage: unit
  script:
    - make test
  tags:
    - docker

unit:py:
  image: "${REPO_PY_DEPS}"
  stage: unit
  script:
    - cd pyee
    - python -m unittest -v
  tags:
    - docker

unit:java:
  image: "${REPO_JAVA_DEPS}"
  stage: unit
  script:
    - cd javaee
    - ./gradlew test
  tags:
    - docker

build:go:
  image: "${REPO_GO_DEPS}"
  stage: build
  script:
    - make goloop
    - make gstool
  artifacts:
    expire_in: 1 day
    paths:
      - bin/
  tags:
    - docker

build:pyee:
  image: "${REPO_PY_DEPS}"
  stage: build
  script:
    - cd pyee
    - pip3 install wheel
    - python3 setup.py bdist_wheel
  artifacts:
    expire_in: 1 day
    paths:
      - pyee/dist/
  tags:
    - docker

build:java:
  image: "${REPO_JAVA_DEPS}"
  stage: build
  script:
    - cd javaee
    - ./gradlew api:build app:execman:distZip
  artifacts:
    expire_in: 1 day
    paths:
      - javaee/app/execman/build/distributions/
      - javaee/api/build/javadoc/
  tags:
    - docker

.pack: &pack
  image: docker:git
  stage: pack
  tags:
    - docker-build

pack:goloop:py:
  <<: *pack
  script:
    - sh docker/goloop-py/build.sh
  dependencies:
    - build:go
    - build:pyee

pack:goloop:java:
  <<: *pack
  script:
    - sh docker/goloop-java/build.sh
  dependencies:
    - build:go
    - build:java

pack:goloop:
  <<: *pack
  script:
    - sh docker/goloop/build.sh
  dependencies:
    - build:go
    - build:pyee
    - build:java

.integration:goloop: &IT__goloop
  image: "docker:java11" #sh -c 'echo -e "FROM docker:git\nRUN apk add openjdk11" | docker build --tag docker:java11 -'
  stage: integration
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesis.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/py.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop/multi.sh
  before_script:
    - env
    - export GRADLE_USER_HOME=${CI_PROJECT_DIR}/testsuite/.gradle
    - export GOLOOP_DOCKER_REPLICAS=4
    - export GOLOOP_DATA=${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}
    - export GOLOOP_GOD_KEYSTORE=${CI_PROJECT_DIR}/testsuite/data/keystore_god.json
    - export SELF_CONTAINER=$(docker ps --filter label=com.gitlab.gitlab-runner.job.id=${CI_JOB_ID} --format {{.ID}});
      export GOLOOP_DOCKER_MOUNT="/builds";
      FORMAT_MOUNT_NAME="{{range .Mounts}}{{if eq .Destination \"/builds\"}}{{.Name}}{{end}}{{end}}";
      export GOLOOP_DOCKER_VOLUME=$(docker inspect ${SELF_CONTAINER} --format "${FORMAT_MOUNT_NAME}");
      export GOLOOP_DOCKER_NETWORK=${GOLOOP_DOCKER_NETWORK:-goloop_${CI_JOB_ID}_net};
      export GOLOOP_DOCKER_PREFIX=${GOLOOP_DOCKER_PREFIX:-goloop-${CI_JOB_ID}};
      sh ${GOLOOP_MULTI_SCRIPT} create
    - sh ${GOLOOP_MULTI_SCRIPT} join ${GOLOOP_GENESIS} ${GOLOOP_GOD_KEYSTORE}; cat ${GOLOOP_GENESIS}
    - sh ${GOLOOP_MULTI_SCRIPT} start
    - sh ${GOLOOP_MULTI_SCRIPT} env ${GOLOOP_ENVFILE}; cat ${GOLOOP_ENVFILE}
    - docker network connect --alias test ${GOLOOP_DOCKER_NETWORK} ${SELF_CONTAINER}
    - cd testsuite
  script:
    - ./gradlew test -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"
  after_script:
    - export GOLOOP_DATA=${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID};
      cp -rf $GOLOOP_DATA goloop_data || echo "failed copy $GOLOOP_DATA"
    - export SELF_CONTAINER=$(docker ps --filter label=com.gitlab.gitlab-runner.job.id=${CI_JOB_ID} --format {{.ID}});
      export GOLOOP_DOCKER_NETWORK=${GOLOOP_DOCKER_NETWORK:-goloop_${CI_JOB_ID}_net};
      docker network disconnect ${GOLOOP_DOCKER_NETWORK} ${SELF_CONTAINER}
    - export GOLOOP_DOCKER_PREFIX=${GOLOOP_DOCKER_PREFIX:-goloop-${CI_JOB_ID}};
      sh ${GOLOOP_MULTI_SCRIPT} rm
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - testsuite/.gradle/caches
      - testsuite/.gradle/native
      - testsuite/.gradle/wrapper
  dependencies:
    - build:go
  artifacts:
    expire_in: 1 day
    when: on_failure
    name: "${CI_COMMIT_REF_SLUG}_${CI_PIPELINE_ID}_${CI_JOB_ID}"
    paths:
      - goloop_data
      - testsuite/build/reports
  tags:
    - docker-service
  except:
    - tags

IT:py:pyscore:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesis.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/py.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop-py/multi.sh
    GOLOOP_ENGINES: "python"
  script:
    - ./gradlew testPyScore -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:py:pygov:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_gov.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/gov.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop-py/multi.sh
    GOLOOP_ENGINES: "python"
  script:
    - ./gradlew testPyGov -DNO_SERVER="true" -DAUDIT="false" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:py:pyaudit:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_audit.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/gov.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop-py/multi.sh
    GOLOOP_ENGINES: "python"
  script:
    - ./gradlew testPyGov -DNO_SERVER="true" -DAUDIT="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:java:javascore:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_fee.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/java.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop-java/multi.sh
    GOLOOP_ENGINES: "java"
  script:
    - ./gradlew testJavaScore -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:goloop:pyaudit:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_audit.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/gov.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop/multi.sh
    GOLOOP_ENGINES: "python"
  script:
    - ./gradlew testPyGov -DNO_SERVER="true" -DAUDIT="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:goloop:pygov:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_gov.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/gov.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop/multi.sh
    GOLOOP_ENGINES: "python"
  script:
    - ./gradlew testPyGov -DNO_SERVER="true" -DAUDIT="false" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:goloop:pyscore:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesis.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/py.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop/multi.sh
    GOLOOP_ENGINES: "python"
  script:
    - ./gradlew testPyScore -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:goloop:javascore:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_fee.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/java.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop/multi.sh
    GOLOOP_ENGINES: "java"
  script:
    - ./gradlew testJavaScore -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

IT:goloop:interscore:
  <<: *IT__goloop
  variables:
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_fee.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/chainenv/java.props"
    GOLOOP_MULTI_SCRIPT: docker/goloop/multi.sh
    GOLOOP_ENGINES: "python,java"
  script:
    - ./gradlew testInterScore -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

.pages: &pages
  image: node:lts-alpine
  stage: deploy
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}"
    PAGES_SOURCE: "public"
  before_script:
    - env
    - mkdir -p /public/${PAGES_PUBLIC}
  script:
    - echo "$(ls $PAGES_SOURCE)"
  after_script:
    - if [ -d ${PAGES_SOURCE} ];then rm -rf /public/${PAGES_PUBLIC}/*;cp -r ${PAGES_SOURCE}/* /public/${PAGES_PUBLIC}/;fi
    - echo "http://ci.arch.iconloop.com/pages/${PAGES_PUBLIC}"
  cache:
    key: "${CI_JOB_STAGE}-${CI_COMMIT_REF_NAME}"
    paths:
      - node_modules
  artifacts:
    expire_in: 1 day
    paths:
      - public
  tags:
    - pages
  only:
    - dev
    - master
    - tags

pages:doc:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/doc"
    PAGES_SOURCE: "doc/dist"
  script:
    - bin/goloop doc ./doc/goloop_cli.md
    - cd doc
    - npm install
    - ./node_modules/.bin/widdershins -l --summary goloop_admin_api.yaml -o goloop_admin_api.md
    - sed -i "s/base:.*/base:'\/pages\/${PAGES_PUBLIC//\//\\\/}\/',/" .vuepress/config.js
    - sed -i 's/\/\/EndOfSidebar/["documentation","Documentation"],\n\/\/EndOfSidebar/' .vuepress/config.js
    - mv README.md documentation.md
    - cat .vuepress/hometags ../README.md > README.md && sed -i "s/doc\///g" README.md
    - ./node_modules/.bin/vuepress build --dest dist ./

pages:javadoc:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/javadoc"
    PAGES_SOURCE: "javaee/api/build/javadoc"

pages:IT:goloop:pyscore:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/pyscore"
    PAGES_SOURCE: "testsuite/build/reports/tests/testPyScore"
  when: on_failure
  dependencies:
    - IT:goloop:pyscore

pages:IT:goloop:pygov:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/pygov"
    PAGES_SOURCE: "testsuite/build/reports/tests/testPyGov"
  when: on_failure
  dependencies:
    - IT:goloop:pygov

pages:IT:goloop:pyaudit:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/pyaudit"
    PAGES_SOURCE: "testsuite/build/reports/tests/testPyGov"
  when: on_failure
  dependencies:
    - IT:goloop:pyaudit

pages:IT:goloop:javascore:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/javascore"
    PAGES_SOURCE: "testsuite/build/reports/tests/testJavaScore"
  when: on_failure
  dependencies:
    - IT:goloop:javascore

pages:IT:goloop:interscore:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/interscore"
    PAGES_SOURCE: "testsuite/build/reports/tests/testInterScore"
  when: on_failure
  dependencies:
    - IT:goloop:interscore

.cleanup:integration:
  image: docker:git
  stage: cleanup
  script:
    - export CACHE_DOCKER_CONTAINERS=$(docker container ls -a -f "label=com.gitlab.gitlab-runner.cache.dir=/builds/${CI_PROJECT_NAMESPACE}" --format "{{.ID}}")
    - for CONTAINER in ${CACHE_DOCKER_CONTAINERS};do
        docker run --rm --volumes-from ${CONTAINER} alpine rm -rf ${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID};
      done;
  tags:
    - docker-service
