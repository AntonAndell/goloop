stages:
  - deps
  - unit
  - build
  - pack
  - integration
  - deploy
  - cleanup

variables:
  GOLANG_VERSION: "1.12.4"
  REPO_GO_DEPS: "goloop/go-deps/${CI_COMMIT_REF_SLUG}"
  PYTHON_VERSION: "3.7.3"
  REPO_PY_DEPS: "goloop/py-deps/${CI_COMMIT_REF_SLUG}"
  REPO_GOCHAIN: "goloop/gochain/${CI_COMMIT_REF_SLUG}"
  REPO_GOLOOP: "goloop/${CI_COMMIT_REF_SLUG}"

before_script:
  - env

deps:go:
  image: docker:git
  stage: deps
  script:
    - sh docker/go-deps/build.sh
  tags:
    - docker-build

deps:py:
  image: docker:git
  stage: deps
  script:
    - sh docker/py-deps/build.sh
  tags:
    - docker-build

unit:go:
  image: "${REPO_GO_DEPS}"
  stage: unit
  script:
    - make test
  tags:
    - docker

unit:py:
  image: "${REPO_PY_DEPS}"
  stage: unit
  script:
    - cd pyee
    - python -m unittest -v
  tags:
    - docker

build:pyee:
  image: "${REPO_PY_DEPS}"
  stage: build
  script:
    - cd pyee
    - python3 setup.py bdist_wheel
  artifacts:
    expire_in: 1 day
    paths:
      - pyee/dist/
  tags:
    - docker

build:go:
  image: "${REPO_GO_DEPS}"
  stage: build
  script:
    - make gochain
    - make goloop
    - make gstool
  artifacts:
    expire_in: 1 day
    paths:
      - bin/
  tags:
    - docker

.pack: &pack
  image: docker:git
  stage: pack
  tags:
    - docker-build
  dependencies:
    - build:pyee
    - build:go

pack:gochian:
  <<: *pack
  script:
    - sh docker/gochain/build.sh

pack:goloop:
  <<: *pack
  script:
    - sh docker/goloop/build.sh

#ITJ : Integration Test Java-sdk
.integration:java-sdk:gochain: &ITJ__gochain
  image: "openjdk:8u212-jdk-alpine"
  stage: integration
  services:
    - ${REPO_GOCHAIN}
  variables:
    GOCHAIN_CONFIG: "${CI_PROJECT_DIR}/testsuite/data/config.json"
    GOCHAIN_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOCHAIN_LOGFILE: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}/gochain.log"
    GOCHAIN_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/env.properties"
  before_script:
    - env
    - sed -i "s/localhost/$(echo ${REPO_GOCHAIN//\//-}|cut -d ":" -f 1)/" ${GOCHAIN_ENVFILE}
    - cd testsuite
  script:
    - ./gradlew test -DNO_SERVER="true" -DCHAIN_ENV="${GOCHAIN_ENVFILE}"
  after_script:
    - cp -r $GOCHAIN_DATA gochain_data
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - testsuite/.gradle
  artifacts:
    expire_in: 1 day
    when: on_failure
    name: "${CI_COMMIT_REF_SLUG}_${CI_PIPELINE_ID}_${CI_JOB_ID}"
    paths:
      - gochain_data
      - testsuite/build/reports
  tags:
    - docker
  except:
    - tags

ITJ:gochain:normal:
  <<: *ITJ__gochain
  variables:
    GOCHAIN_CONFIG: "${CI_PROJECT_DIR}/testsuite/data/config.json"
    GOCHAIN_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOCHAIN_LOGFILE: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}/gochain.log"
    GOCHAIN_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/env.properties"
  script:
    - ./gradlew testNormal -DNO_SERVER="true" -DCHAIN_ENV="${GOCHAIN_ENVFILE}"

ITJ:gochain:governance:
  <<: *ITJ__gochain
  variables:
    GOCHAIN_CONFIG: "${CI_PROJECT_DIR}/testsuite/data/govConfig.json"
    GOCHAIN_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOCHAIN_LOGFILE: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}/gochain.log"
    GOCHAIN_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_normal.json"
    GOCHAIN_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/govEnv.properties"
  script:
    - ./gradlew testGovernance -DNO_SERVER="true" -DAUDIT="false" -DCHAIN_ENV="${GOCHAIN_ENVFILE}"

ITJ:gochain:governance:audit:
  <<: *ITJ__gochain
  variables:
    GOCHAIN_CONFIG: "${CI_PROJECT_DIR}/testsuite/data/govConfigAudit.json"
    GOCHAIN_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOCHAIN_LOGFILE: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}/gochain.log"
    GOCHAIN_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_audit.json"
    GOCHAIN_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/govEnvAudit.properties"
  script:
    - ./gradlew testGovernance -DNO_SERVER="true" -DAUDIT="true" -DCHAIN_ENV="${GOCHAIN_ENVFILE}"

.integration:java-sdk:goloop: &ITJ__goloop
  image: docker:java #sh -c 'echo -e "FROM docker:git\nRUN apk add openjdk8" | docker build --tag docker:java -'
  stage: integration
  variables:
    GOLOOP_DOCKER_REPLICAS: 4
    GOLOOP_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesis.json"
    GOLOOP_GOD_KEYSTORE: "${CI_PROJECT_DIR}/testsuite/data/keystore_god.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/env.properties"
  before_script:
    - env
    - export SELF_CONTAINER=$(docker ps --filter label=com.gitlab.gitlab-runner.job.id=${CI_JOB_ID} --format {{.ID}});
      export GOLOOP_DOCKER_MOUNT="/builds/${CI_PROJECT_NAMESPACE}";
      FORMAT_MOUNT_NAME="{{range .Mounts}}{{if eq .Destination \"/builds/$CI_PROJECT_NAMESPACE\"}}{{.Name}}{{end}}{{end}}";
      export GOLOOP_DOCKER_VOLUME=$(docker inspect ${SELF_CONTAINER} --format "${FORMAT_MOUNT_NAME}");
      export GOLOOP_DOCKER_NETWORK=${GOLOOP_DOCKER_NETWORK:-goloop_${CI_JOB_ID}_net};
      export GOLOOP_DOCKER_PREFIX=${GOLOOP_DOCKER_PREFIX:-goloop-${CI_JOB_ID}};
      sh docker/goloop/multi.sh create
    - sh docker/goloop/multi.sh join ${GOLOOP_GENESIS} ${GOLOOP_GOD_KEYSTORE}; cat ${GOLOOP_GENESIS}
    - sh docker/goloop/multi.sh start
    - sh docker/goloop/multi.sh env ${GOLOOP_ENVFILE}; cat ${GOLOOP_ENVFILE}
    - docker network connect --alias test ${GOLOOP_DOCKER_NETWORK} ${SELF_CONTAINER}
    - cd testsuite
  script:
    - ./gradlew testNormal -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"
  after_script:
    - cp -rf $GOLOOP_DATA goloop_data || echo "failed copy $GOLOOP_DATA"
    - export SELF_CONTAINER=$(docker ps --filter label=com.gitlab.gitlab-runner.job.id=${CI_JOB_ID} --format {{.ID}});
      export GOLOOP_DOCKER_NETWORK=${GOLOOP_DOCKER_NETWORK:-goloop_${CI_JOB_ID}_net};
      docker network disconnect ${GOLOOP_DOCKER_NETWORK} ${SELF_CONTAINER}
    - export GOLOOP_DOCKER_PREFIX=${GOLOOP_DOCKER_PREFIX:-goloop-${CI_JOB_ID}};
      sh docker/goloop/multi.sh rm
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - testsuite/.gradle
  artifacts:
    expire_in: 1 day
    when: on_failure
    name: "${CI_COMMIT_REF_SLUG}_${CI_PIPELINE_ID}_${CI_JOB_ID}"
    paths:
      - goloop_data
      - testsuite/build/reports
  tags:
    - docker-service
  except:
    - tags

ITJ:goloop:normal:
  <<: *ITJ__goloop
  variables:
    GOLOOP_DOCKER_REPLICAS: 4
    GOLOOP_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesis.json"
    GOLOOP_GOD_KEYSTORE: "${CI_PROJECT_DIR}/testsuite/data/keystore_god.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/env.properties"
  script:
    - ./gradlew testNormal -DNO_SERVER="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

ITJ:goloop:governance:
  <<: *ITJ__goloop
  variables:
    GOLOOP_DOCKER_REPLICAS: 4
    GOLOOP_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_normal.json"
    GOLOOP_GOD_KEYSTORE: "${CI_PROJECT_DIR}/testsuite/data/keystore_god.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/govEnv.properties"
  script:
    - ./gradlew testGovernance -DNO_SERVER="true" -DAUDIT="false" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

ITJ:goloop:governance:audit:
  <<: *ITJ__goloop
  variables:
    GOLOOP_DOCKER_REPLICAS: 4
    GOLOOP_DATA: "${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}/${CI_JOB_ID}"
    GOLOOP_GENESIS: "${CI_PROJECT_DIR}/testsuite/data/genesisStorage/genesis_audit.json"
    GOLOOP_GOD_KEYSTORE: "${CI_PROJECT_DIR}/testsuite/data/keystore_god.json"
    GOLOOP_ENVFILE: "${CI_PROJECT_DIR}/testsuite/data/govEnvAudit.properties"
  script:
    - ./gradlew testGovernance -DNO_SERVER="true" -DAUDIT="true" -DCHAIN_ENV="${GOLOOP_ENVFILE}"

.pages: &pages
  image: node:lts-alpine
  stage: deploy
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}"
    PAGES_SOURCE: "public"
  before_script:
    - env
    - mkdir -p /public/${PAGES_PUBLIC}
  script:
    - echo "$(ls $PAGES_SOURCE)"
  after_script:
    - if [ -d ${PAGES_SOURCE} ];then rm -rf /public/${PAGES_PUBLIC}/*;cp -r ${PAGES_SOURCE}/* /public/${PAGES_PUBLIC}/;fi
    - echo "http://ci.arch.iconloop.com/pages/${PAGES_PUBLIC}"
  cache:
    key: "$CI_JOB_STAGE/$CI_COMMIT_REF_NAME"
    paths:
      - node_modules
  artifacts:
    expire_in: 1 day
    paths:
      - public
  tags:
    - pages

pages:doc:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/doc"
  script:
    - bin/goloop doc ./doc/goloop_cli.md
    - cd doc
    - npm install
    - ./node_modules/.bin/widdershins -l --summary goloop_admin_api.yaml -o goloop_admin_api.md
    - sed -i "s/base:.*/base:'\/pages\/${PAGES_PUBLIC//\//\\\/}\/',/" ./.vuepress/config.js
    - ./node_modules/.bin/vuepress build --dest dist ./
    - mv dist ../public

pages:ITJ:gochain:normal:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_gochain/normal"
    PAGES_SOURCE: "testsuite/build/reports/tests/testNormal"
  when: on_failure
  dependencies:
    - ITJ:gochain:normal

pages:ITJ:gochain:governance:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_gochain/governance"
    PAGES_SOURCE: "testsuite/build/reports/tests/testGovernance"
  when: on_failure
  dependencies:
    - ITJ:gochain:governance

pages:ITJ:gochain:governance:audit:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_gochain/governance_audit"
    PAGES_SOURCE: "testsuite/build/reports/tests/testGovernance"
  when: on_failure
  dependencies:
    - ITJ:gochain:governance:audit

pages:ITJ:goloop:normal:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/normal"
    PAGES_SOURCE: "testsuite/build/reports/tests/testNormal"
  when: on_failure
  dependencies:
    - ITJ:goloop:normal

pages:ITJ:goloop:governance:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/governance"
    PAGES_SOURCE: "testsuite/build/reports/tests/testGovernance"
  when: on_failure
  dependencies:
    - ITJ:goloop:governance

pages:ITJ:goloop:governance:audit:
  <<: *pages
  variables:
    PAGES_PUBLIC: "${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}/ITJ_goloop/governance_audit"
    PAGES_SOURCE: "testsuite/build/reports/tests/testGovernance"
  when: on_failure
  dependencies:
    - ITJ:goloop:governance:audit

.cleanup:integration:
  image: docker:git
  stage: cleanup
  script:
    - export CACHE_DOCKER_CONTAINERS=$(docker container ls -a -f "label=com.gitlab.gitlab-runner.cache.dir=/builds/${CI_PROJECT_NAMESPACE}" --format "{{.ID}}")
    - for CONTAINER in ${CACHE_DOCKER_CONTAINERS};do
        docker run --rm --volumes-from ${CONTAINER} alpine rm -rf ${CI_PROJECT_DIR}.tmp/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID};
      done;
  tags:
    - docker-service
