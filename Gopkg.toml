# Gopkg.toml example
#
# Refer to https://golang.github.io/dep/docs/Gopkg.toml.html
# for detailed Gopkg.toml documentation.
#
# required = ["github.com/user/thing/cmd/thing"]
# ignored = ["github.com/user/project/pkgX", "bitbucket.org/user/project/pkgA/pkgY"]
#
# [[constraint]]
#   name = "github.com/user/project"
#   version = "1.0.0"
#
# [[constraint]]
#   name = "github.com/user/project2"
#   branch = "dev"
#   source = "github.com/myfork/project2"
#
# [[override]]
#   name = "github.com/x/y"
#   version = "2.4.0"
#
# [prune]
#   non-go = false
#   go-tests = true
#   unused-packages = true
################################################################################

# NOTE: All packages should be pinned to specific versions.
# Packages without releases must pint to a commit.

[prune]
  go-tests = true
  unused-packages = true

# TODO Find an appropriate version
[[constraint]]
  branch = "master"
  name = "golang.org/x/crypto"

[[constraint]]
  name = "github.com/dgraph-io/badger"
  branch = "master"

[[constraint]]
  name = "github.com/syndtr/goleveldb"
  revision = "c4c61651e9e37fa117f53c5a906d3b63090d8445"

[[constraint]]
  name = "go.etcd.io/bbolt"
  version = "v1.3.1-etcd.8"


[[constraint]]
  name = "github.com/stretchr/testify"
  version = "v1.2.2"
