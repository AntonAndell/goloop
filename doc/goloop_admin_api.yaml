openapi: 3.0.2
info:
  title: Node Management API
  description: goloop management
  version: 0.0.1
servers:
  - url: http://localhost:9080/admin
tags:
  - name: node
    description: Node Management
  - name: chain
    description: Chain Management
x-tagGroups:
  - name: Node Management
    tags:
      - chain
      - node
x-pathParameters:nid: &path__nid
  - name: nid
    in: path
    required: true
    description: "network-id of chain"
    schema:
      type: string
      format: "\"0x\" + lowercase HEX string"
x-queryParameters:format: &query__format
  - name: format
    in: query
    description: "Format the output using the given Go template"
    schema:
      type: string

paths:
  /chain:
    get:
      operationId: listChain
      tags:
        - chain
      summary: List Chains
      description: Returns a list of chains
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                description: "array of chains"
                items:
                  $ref: "#/components/schemas/Chain"
        "500":
          description: Internal Server Error
    post:
      operationId: joinChain
      tags:
        - chain
      summary: Join Chain
      description: Join Chain
      requestBody:
        description: "Genesis-Storage zip file and json encoded chain-configuration for join chain using multipart"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                json:
                  allOf:
                    - $ref: "#/components/schemas/ChainConfig"
                  description: "json encoded chain-configuration, using multipart 'Content-Disposition: name=json'"
                genesisZip:
                  type: string
                  format: binary
                  description: "Genesis-Storage zip file, using multipart 'Content-Disposition: name=genesisZip'"
              required:
                - json
                - genesisZip
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/NetworkID"
        "409":
          description: Conflict
        "500":
          description: Internal Server Error

  /chain/{nid}:
    get:
      operationId: getChain
      tags:
        - chain
      summary: Inspect Chain
      description: Return low-level information about a chain.
      parameters:
        - <<: *path__nid
        - <<: *query__format
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChainInspect"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      operationId: leaveChain
      tags:
        - chain
      summary: Leave Chain
      description: Leave Chain.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{nid}/start:
    post:
      operationId: startChain
      tags:
        - chain
      summary: Start Chain
      description: Start Chain.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{nid}/stop:
    post:
      operationId: stopChain
      tags:
        - chain
      summary: Stop Chain
      description: Stop Chain.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{nid}/reset:
    post:
      operationId: resetChain
      tags:
        - chain
      summary: Reset Chain
      description: Reset Chain.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  #   /chain/{nid}/verify:
  #     post:
  #       operationId: verifyChain
  #       tags:
  #         - chain
  #       summary: Verify Chain
  #       description: Verify Chain.
  #       parameters:
  #         - <<: *path__nid
  #       responses:
  #         "200":
  #           description: Success
  #         "404":
  #           description: Not Found
  #         "500":
  #           description: Internal Server Error
  /chain/{nid}/import:
    post:
      operationId:  importChain
      tags:
        - chain
      summary: Import Chain
      description: Import a chain from legacy database.
      parameters:
        - <<: *path__nid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ChainImportParam"
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{nid}/configure:
    post:
      operationId: configureChain
      tags:
        - chain
      summary: Configure chain
      description: Configure chain.
      parameters:
        - <<: *path__nid
      requestBody:
        required: true
        description: refer ChainConfig properties
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ConfigureParam"
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /system:
    get:
      operationId: getSystem
      tags:
        - node
      summary: View system
      description: Return System Infomation.
      parameters:
        - <<: *query__format
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System"
        "500":
          description: Internal Server Error
  /system/configure:
    post:
      operationId: configureSystem
      tags:
        - chain
      summary: Configure system
      description: Configure system
      parameters:
        - <<: *path__nid
      requestBody:
        required: true
        description: refer SystemConfig properties
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ConfigureParam"
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
components:
  schemas:
    NetworkID:
      type: string
      description: "network-id of chain, \"0x\" + lowercase HEX string"
      example: "0x000000"
    Chain:
      type: object
      properties:
        nid:
          type: string
          format: "\"0x\" + lowercase HEX string"
          description: "network-id of chain"
        channel:
          type: string
          description: "chain-alias of node"
        height:
          type: integer
          format: int64
          description: "block height of chain"
        state:
          type: string
          description: "state of chain"
        lastError:
          type: string
          description: "last error of chain"
      example:
        nid: "0x000000"
        channel: "000000"
        state: "started"
        height: 100
        lastError: ""
    ChainInspect:
      allOf:
        - $ref: "#/components/schemas/Chain"
        - type: object
          properties:
            genesisTx:
              type: object
              description: "Genesis Transaction"
            config:
              $ref: "#/components/schemas/ChainConfig"
            module:
              type: object
              additionalProperties:
                type: object
    ChainConfig:
      type: object
      properties:
        dbType:
          type: string
          enum: [badgerdb, goleveldb, boltdb, mapdb]
          default: "goleveldb"
          description: "Name of database system"
        seedAddress:
          type: string
          description: "List of Seed ip-port, Comma separated string"
        role:
          type: integer
          enum: [0,1,2,3]
          default: 3
          description: >
            Role:
             * `0` - None
             * `1` - Seed
             * `2` - Validator
             * `3` - Seed and Validator
        concurrencyLevel:
          type: integer
          default: 1
          description: "Maximum number of executors to use for concurrency"
        normalTxPool:
          type: integer
          default: 0
          description: "Size of normal transaction pool"
        patchTxPool:
          type: integer
          default: 0
          description: "Size of patch transaction pool"
        maxBlockTxBytes:
          type: integer
          default: 0
          description: "Max size of transactions in a block"
        channel:
          type: string
          default: ""
          description: "Chain-alias of node"
        secureSuites:
          type: string
          default: "none,tls,ecdhe"
          description: "Supported Secure suites with order (none,tls,ecdhe) - Comma separated string"
        secureAeads:
          type: string
          default: "chacha,aes128,aes256"
          description: "Supported Secure AEAD with order (chacha,aes128,aes256) - Comma separated string"
      example:
        dbType: "goleveldb"
        seedAddress: "localhost:8080"
        role: 3
        concurrencyLevel: 1
        normalTxPool: 5000
        patchTxPool: 5000
        maxBlockTxBytes: 1048576
        channel: "000000"
        secureSuites: "none,tls,ecdhe"
        secureAeads: "chacha,aes128,aes256"
    ChainImportParam:
      type: object
      properties:
        dbPath:
          type: string
          description: "Database path"
        height:
          type: int64
          description: "Block Height"
      required:
        - dbPath
        - height
      example:
        dbPath: "/path/to/database"
        height: 1
    System:
      type: object
      properties:
        buildVersion:
          type: string
          description: "build version"
        buildTags:
          type: string
          description: "buildTags"
        setting:
          type: object
          properties:
            address:
              type: string
              pattern: "\"hx\" + 40 digit HEX string"
              description: "wallet address"
            p2p:
              type: string
              description: "p2p address"
            p2pListen:
              type: string
              description: "p2p listen address"
        config:
          $ref: "#/components/schemas/SystemConfig"
      example:
        buildVersion: "v0.1.7"
        buildTags: "linux/amd64 tags()-2019-08-20-09:39:15"
        setting:
          address: "hx4208599c8f58fed475db747504a80a311a3af63b"
          p2p: "localhost:8080"
          p2pListen: "localhost:8080"
          rpcAddr: ":9080"
          rpcDump: false
        config:
          eeInstances: 1
          rpcDefaultChannel: ""
          rpcIncludeDebug: false
    SystemConfig:
      type: object
      properties:
        eeInstances:
          type: integer
          description: "eeInstances"
        rpcDefaultChannel:
          type: string
          description: "default channel for legacy api"
        rpcIncludeDebug:
          type: boolean
          description: "JSON-RPC Response with detail information"
      example:
        eeInstances: 1
        rpcDefaultChannel: ""
        rpcIncludeDebug: false
    ConfigureParam:
      type: object
      properties:
        key:
          type: string
          description: "configuration field name"
        value:
          type: string
          description: "configuration value"
      required:
        - key
        - value
