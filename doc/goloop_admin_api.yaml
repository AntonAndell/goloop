openapi: 3.0.2
info:
  title: Node Management API
  description: goloop management
  version: 0.0.1
servers:
  - url: http://localhost:9080/admin
tags:
  - name: node
    description: Node Management
  - name: chain
    description: Chain Management
x-tagGroups:
  - name: Node Management
    tags:
      - chain
      - node
x-pathParameters:nid: &path__nid
  - name: nid
    in: path
    required: true
    description: "network-id of chain"
    schema:
      type: string
      format: "\"0x\" + lowercase HEX string"

paths:
  /chain:
    get:
      operationId: listChain
      tags:
        - chain
      summary: List Chains
      description: Returns a list of chains
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                description: "array of chains"
                items:
                  $ref: "#/components/schemas/Chain"
        "500":
          description: Internal Server Error
    post:
      operationId: joinChain
      tags:
        - chain
      summary: Join Chain
      description: Join Chain
      requestBody:
        description: "Genesis-Storage zip file and json encoded chain-configuration for join chain using multipart"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                json:
                  allOf:
                    - $ref: "#/components/schemas/ChainConfig"
                  description: "json encoded chain-configuration, using multipart 'Content-Disposition: name=json'"
                genesisZip:
                  type: string
                  format: binary
                  description: "Genesis-Storage zip file, using multipart 'Content-Disposition: name=genesisZip'"
              required:
                - json
                - genesisZip
      responses:
        "200":
          description: Success
        "409":
          description: Conflict
        "500":
          description: Internal Server Error

  /chain/{nid}:
    get:
      operationId: getChain
      tags:
        - chain
      summary: Get Chain
      description: Get Chain Infomation.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChainInspect"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      operationId: leaveChain
      tags:
        - chain
      summary: Leave Chain
      description: Leave Chain.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{nid}/start:
    post:
      operationId: startChain
      tags:
        - chain
      summary: Start Chain
      description: Start Chain.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{nid}/stop:
    post:
      operationId: stopChain
      tags:
        - chain
      summary: Stop Chain
      description: Stop Chain.
      parameters:
        - <<: *path__nid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  # /chain/{nid}/reset:
  #   post:
  #     operationId: resetChain
  #     tags:
  #       - chain
  #     summary: Reset Chain
  #     description: Reset Chain.
  #     parameters:
  #       - <<: *path__nid
  #     responses:
  #       "200":
  #         description: Success
  #       "404":
  #         description: Not Found
  #       "500":
  #         description: Internal Server Error
  # /chain/{nid}/verify:
  #   post:
  #     operationId: verifyChain
  #     tags:
  #       - chain
  #     summary: Verify Chain
  #     description: Verify Chain.
  #     parameters:
  #       - <<: *path__nid
  #     responses:
  #       "200":
  #         description: Success
  #       "404":
  #         description: Not Found
  #       "500":
  #         description: Internal Server Error
  # /chain/{nid}/import:
  #   post:
  #     operationId: importChain
  #     tags:
  #       - chain
  #     summary: Import Chain
  #     description: Import Chain.
  #     parameters:
  #       - <<: *path__nid
  #     responses:
  #       "200":
  #         description: Success
  #       "404":
  #         description: Not Found
  #       "500":
  #         description: Internal Server Error

  /system:
    get:
      operationId: getSystem
      tags:
        - node
      summary: View System
      description: Return System Infomation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System"
        "500":
          description: Internal Server Error
components:
  schemas:
    Chain:
      type: object
      properties:
        nid:
          type: string
          format: "\"0x\" + lowercase HEX string"
          description: "network-id of chain"
        channel:
          type: string
          description: "chain-alias of node"
        height:
          type: integer
          format: int64
          description: "block height of chain"
        state:
          type: string
          description: "state of chain"
        lastError:
          type: string
          description: "last error of chain"
      example:
        nid: "0x000000"
        channel: "000000"
        height: 100
        state: "started"
        lastError: ""
    ChainInspect:
      allOf:
        - $ref: "#/components/schemas/Chain"
        - type: object
          properties:
            genesisTx:
              type: object
            config:
              $ref: "#/components/schemas/ChainConfig"
            module:
              type: object
              additionalProperties:
                type: object
    ChainConfig:
      type: object
      properties:
        db_type:
          type: string
          enum: [badgerdb, goleveldb, boltdb, mapdb]
          default: "goleveldb"
          description: "Name of database system"
        seed_addr:
          type: string
          description: "Ip-port of Seed"
        role:
          type: integer
          enum: [0,1,2,3]
          default: 3
          description: >
            Role:
             * `0` - None
             * `1` - Seed
             * `2` - Validator
             * `3` - Seed and Validator
        concurrency_level:
          type: integer
          default: 1
          description: "Maximum number of executors to use for concurrency"
        normal_tx_pool:
          type: integer
          default: 0
          description: "Size of normal transaction pool"
        patch_tx_pool:
          type: integer
          default: 0
          description: "Size of patch transaction pool"
        max_block_tx_bytes:
          type: integer
          default: 0
          description: "Max size of transactions in a block"
        channel:
          type: string
          default: ""
          description: "Chain-alias of node"
        secureSuites:
          type: string
          default: "none,tls,ecdhe"
          description: "Supported Secure suites with order (none,tls,ecdhe) - Comma separated string"
        secureAeads:
          type: string
          default: "chacha,aes128,aes256"
          description: "Supported Secure AEAD with order (chacha,aes128,aes256) - Comma separated string"
    System:
      type: object
      properties:
        buildVersion:
          type: string
          description: "build version"
        buildTags:
          type: string
          description: "buildTags"
        address:
          type: string
          pattern: "\"hx\" + 40 digit HEX string"
          description: "wallet address"
        p2p:
          type: string
          description: "p2p address"
        p2pListen:
          type: string
          description: "p2p listen address"
      example:
        buildVersion: "release-gs/v0.1.1-2"
        buildTags: "darwin/amd64 tags()-2019-05-31-13:51:28"
        address: "hx4208599c8f58fed475db747504a80a311a3af63b"
        p2p: "localhost:8080"
        p2pListen: "localhost:8080"
